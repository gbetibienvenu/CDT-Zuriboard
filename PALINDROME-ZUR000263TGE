class CascadingPalindrome:
    def init(self, parameter):
        self.parameter = parameter
    
    def validate_input(self):
        if not isinstance(self.parameter, str):
            raise ValueError("Input parameter must be a string")
    
    def find_longest_palindrome(self, s, start, end):
        while start >= 0 and end < len(s) and s[start] == s[end]:
            start -= 1
            end += 1
        return s[start + 1:end]
    
    def process_parameter(self):
        self.validate_input()
        components = self.parameter.split()
        result = []
        
        for component in components:
            palindrome = self.find_longest_palindrome(component, 0, len(component) - 1)
            result.append(palindrome)
        
        return ' '.join(result)
    
try:
    parameter = input("Enter the parameter: ")
    palindrome_obj = CascadingPalindrome(parameter)
    result = palindrome_obj.process_parameter()
    print("Cascading Palindromes:", result)
except ValueError as ve:
    print("Error:", ve)
except Exception as e:
    print("An error occurred:", e)
